{"version":3,"sources":["theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","green","secondary","grey","background","default","paper","type","overrides","MuiTooltip","tooltip","fontSize","App","ThemeProvider","Container","maxWidth","style","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAsBeA,EAnBDC,IAAe,CAC3BC,QAAS,CACPC,QAAS,CAAEC,KAAMC,IAAK,MACtBC,UAAW,CAAEF,KAAMG,IAAI,MACvBC,WAAY,CACVC,QAAS,UACTC,MAAO,WAETC,KAAM,QAERC,UAAW,CACTC,WAAY,CACVC,QAAS,CACPC,SAAU,QCCHC,MAVf,WACE,OACE,cAACC,EAAA,EAAD,CAAejB,MAAOA,EAAtB,SACE,cAACkB,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAO,CAAEC,UAAW,UAA7C,SACE,qDCGOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1bde018.chunk.js","sourcesContent":["import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport { green, grey } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: green[\"A700\"] },\r\n    secondary: { main: grey[\"A700\"] },\r\n    background: {\r\n      default: \"#2b2e2e\",\r\n      paper: \"#272727\",\r\n    },\r\n    type: \"dark\",\r\n  },\r\n  overrides: {\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        fontSize: 12,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport theme from \"./theme\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth=\"md\" style={{ textAlign: \"center\" }}>\r\n        <span>Coming soon!</span>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}